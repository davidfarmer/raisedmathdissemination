    ,*apt} #h ,algebraic ,cod+ ,!ory

  ,cod+ !ory is an applica;n ( algebra t
has 2come 9cr1s+ly important ov} ! la/
s"eal decades4 ,:5 we transmit data1 we
>e 3c}n$ ab s5d+ a message ov} a *annel
t cd 2 a6ect$ by 8noise40 ,we wi% to 2
able to 5code & decode ! 9=ma;n 9 a
mann} t w all{ ! detec;n1 & possibly !
correc;n1 ( }rors caus$ by noise4 ,?
situa;n >ises 9 _m >1s ( communica;ns1
9clud+ radio1 teleph"o1 televi.n1
comput} communica;ns1 & digital m$ia
te*nology4 ,probabil;y1 comb9atorics1
gr|p !ory1 l9e> algebra1 & polynomial
r+s ov} f9ite fields all play important
roles 9 cod+ !ory4

    ,sec;n #h4a ,}ror-,detect+ &
    ,correct+ ,codes
  ,let u exam9e a simple model ( a
communica;ns sy/em = transmitt+ & rcvg
cod$ messages "<,figure #h4a">4
7777777777777777777777777777777777777777
,image ,,id3 algcodes-5code-decode  #cba
,descrip;n3 ,a v}tical fl{ *>t ": an
;m-digit message is pass$ to an 5cod} :
is repres5t$ by a rectangle to 2come an
;n-digit code~w : is pass$ to a
transmitt} t is al repres5t$ by a
rectangle4  ,! |tcome ( ! transmitt} may
h noise & is pass$ to ! rcvr : is
prepres5t$ by a rectangle4  ,! rcvr
passes an ;n-digit rcvd ~w to a decod} t
is repres5t$ by a rectangle4  ,! decod}
produces an ;m-digit rcvd ~w or an }ror4
,figure  #h4a 4  ,5cod+ & decod+
messages
gggggggggggggggggggggggggggggggggggggggg










                                    #cbb
,transcrib} note3 ! image ) ,,id
algcodes-5code-decode 2l;gs "h4
,replace ? page ) ! 9dep5d5tly g5}at$
tactile image4




















                                    #cbc
  ,uncod$ messages may 2 compos$ ( lrs
or "*s1 b typically !y 3si/ ( b9>y
.2;m-tuples4 ,~! messages >e 5cod$ 9to
code~ws1 3si/+ ( b9>y .2;n-tuples1 by a
device call$ an ~15cod}~'4 ,! message is
transmitt$ & !n decod$4 ,we w 3sid} !
o3urr;e ( }rors dur+ transmis.n4 ,an
~1}ror o3urs if "! is a *ange 9 "o or m
bits 9 ! code~w4 ,a ~1decod+ ~1s*eme is
a me?od t ei 3v}ts an >bitr>ily rcvd
.2;n-tuple 9to a m1n+;l decod$ message
or gives an }ror message = t .2;n-tuple4
,if ! rcvd message is a code~w "<"o ( !
special .2;n-tuples all{$ to 2
transmitt$">1 !n ! decod$ message m/ 2 !
unique message t 0 5cod$ 9to ! code~w4
,= rcvd non-code~ws1 ! decod+ s*eme w
give an }ror 9dica;n1 or1 if we >e m
cl"e1 w actually try to correct ! }ror &
recon/ruct ! orig9al message4 ,|r goal
is to transmit }ror-free messages z
*1ply & qkly z possible4
7777777777777777777777777777777777777777
,example  #h4b 4
  ,"o possible cod+ s*eme wd 2 to   #cbd
s5d a message s"eal "ts & to comp>e !
rcvd copies ) "o ano!r4 ,suppose t !
message to 2 5cod$ is a b9>y .2;n-tuple
_% (x1, x2, ''', x;n") _:4 ,! message is
5cod$ 9to a b9>y _% #3n _:-tuple by
simply rep1t+ ! message ?ree "ts3
_% (x1, x2, ''', x;n") $|33o (x1, x2,
''', x;n, x1, x2, ''', x;n, x1, x2, ''',
x;n") _:
4 ,to decode ! message1 we *oose z !
.2i? digit ! "o t appe>s 9 ! .2i? place
9 at l1/ two ( ! ?ree transmis.ns4 ,=
example1 if ! orig9al message is
_% (0110) _:1 !n ! transmitt$ message w
2 _% (#0110 #0110 #0110) _:4 ,if "! is a
transmis.n }ror 9 ! fif? digit1 !n !
rcvd code~w w 2
_% (#0110 #1110 #0110) _:1 : w 2
correctly decod$ z _% (0110) _:4  #g  ,?
triple-repeti;n me?od w automatically
detect & correct all s+le }rors1 b x is
sl{ & 9e6ici5t3 to s5d a message 3si/+ (
.2;n bits1 _% #2n _: extra bits >e
requir$1 & we c only detect & correct
s+le }rors4 ,we w see t x is        #cbe
possible to f9d an 5cod+ s*eme t w 5code
a message ( .2;n bits 9to .2;m bits )
.2;m m* small} ?an _% #3n _:4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,example  #h4c 4
  ~1,ev5 ~1p>;y~'1 a commonly us$ cod+
s*eme1 is m* m e6ici5t ?an ! simple
repeti;n s*eme4 ,! ,,ascii "<,am}ican
,/&>d ,code = ,9=ma;n ,9t}*ange"> cod+
sy/em uses b9>y #h-tuples1 yield+
_% #2~8 .k #256 _: possible #h-tuples4
,h{"e1 only sev5 bits >e ne$$ s9ce "! >e
only _% #2~7 .k #128 _: ,,ascii "*s4
,:at c or %d 2 d"o ) ! extra bit8 ,us+ !
full ei<t bits1 we c detect s+le
transmis.n }rors4 ,= example1 ! ,,ascii
codes = ,a1 ;,b1 & ;,c >e
_%
,a .k #65;10 .k #01000001;2,
,b .k #66;10 .k #01000010;2,
,c .k #67;10 .k #01000011;2
_:
4 ,notice t ! leftmo/ bit is alw    #cbf
set to #j2 t is1 ! #abh ,,ascii "*s h
codes
_%
#00000000;2" .k #0;10,
'''
#01111111;2" .k #127;10
_:
4 ,! bit c 2 us$ = }ror *eck+ on ! o!r
sev5 bits4 ,x is set to ei #j or #a s t
! total numb} ( #a bits 9 ! repres5ta;n
( a "* is ev54 ,us+ ev5 p>;y1 ! codes =
,a1 ;,b1 & ;,c n{ 2come
_%
,a .k #01000001;2,
,b .k #01000010;2,
,c .k #11000011;2
_:
4 ,suppose an ,a is s5t & a transmis.n
}ror 9 ! six? bit is caus$ by noise ov}
! communica;n *annel s t
_% (#0100 #0101) _: is rcvd4 ,we "k an
}ror has o3urr$ s9ce ! rcvd ~w has an
odd numb} ( #as1 & we c n{ reque/ t !
code~w 2 transmitt$ ag4 ,:5 us$ = }ror
*eck+1 ! leftmo/ bit is call$ a     #cbg
~1p>;y ~1*eck ~1bit~'4
  ,by f> ! mo/ common }ror-detect+ codes
us$ 9 comput}s >e bas$ on ! addi;n ( a
p>;y bit4 ,typically1 a comput} /ores
9=ma;n 9 .2;m-tuples call$ ~1~ws~'4
,common ~w l5g?s >e #h1 #af1 & #cb bits4
,"o bit 9 ! ~w is set aside z ! p>;y
*eck bit1 & is n us$ to /ore 9=ma;n4 ,?
bit is set to ei #j or #a1 dep5d+ on !
numb} ( #as 9 ! ~w4
  ,add+ a p>;y *eck bit all{s ! detec;n
( all s+le }rors 2c *ang+ a s+le bit ei
9cr1ses or decr1ses ! numb} ( #as by "o1
& 9 ei case ! p>;y has be5 *ang$ f ev5
to odd1 s ! new ~w is n a code~w4 "<,we
cd al 3/ruct an }ror detec;n s*eme bas$
on ~1odd ~1p>;y~'2 t is1 we cd set !
p>;y *eck bit s t a code~w alw has an
odd numb} ( #as4">
gggggggggggggggggggggggggggggggggggggggg

  ,! ev5 p>;y sy/em is easy to imple;t1
b has two drawbacks4 ,f/1 multiple }rors
>e n detectable4 ,suppose an ,a is s5t &
! f/ & sev5? bits >e *ang$ f #j to  #cbh
#a4 ,! rcvd ~w is a code~w1 b w 2 decod$
9to a ;,c 9/1d ( an ,a4 ,second1 we d n
h ! abil;y to correct }rors4 ,if !
#h-tuple _% (#1001 #1000) _: is rcvd1 we
"k t an }ror has o3urr$1 b we h no idea
: bit has be5 *ang$4 ,we w n{ 9ve/igate
a cod+ s*eme t w n only all{ u to detect
transmis.n }rors b w actually correct !
}rors4
7777777777777777777777777777777777777777
,example  #h4d 4
  ,suppose t |r orig9al message is ei a
#j or a #a1 & t #j 5codes to _% (000) _:
& #a 5codes to _% (111) _:4 ,if only a
s+le }ror o3urs dur+ transmis.n1 we c
detect & correct ! }ror4 ,= example1 if
a _% (101) _: is rcvd1 !n ! second bit
m/ h be5 *ang$ f a #a to a #j4 ,!
orig9ally transmitt$ code~w m/ h be5
_% (111) _:4 ,? me?od w detect & correct
all s+le }rors4
7777777777777777777777777777777777777777
,table  #h4e 4  ,a repeti;n code
,transmitt$2 ,rcvd ,~w4
,code~w2 #jjj2 #jja2 #jaj2 #jaa2    #cbi
  #ajj2 #aja2 #aaj2 #aaa4
#jjj2 #j2 #a2 #a2 #b2 #a2 #b2 #b2 #c4
#aaa2 #c2 #b2 #b2 #a2 #b2 #a2 #a2 #j4
gggggggggggggggggggggggggggggggggggggggg

  ,9 ,table #h4e1 we pres5t all possible
~ws t mi<t 2 rcvd = ! transmitt$ code~ws
_% (000) _: & _% (111) _:4 ,table #h4e
al %{s ! numb} ( bits by : ea* rcvd
#c-tuple di6}s f ea* orig9al code~w4
gggggggggggggggggggggggggggggggggggggggg

      ,subsec;n ,maximum-,likelihood
      ,decod+
  ,! cod+ s*eme pres5t$ 9 ,example #h4d
is n a complete solu;n to ! problem 2c x
does n a3.t = ! possibil;y ( multiple
}rors4 ,= example1 ei a "<#jjj"> or a
"<#aaa"> cd 2 s5t & a "<#jja"> rcvd4 ,we
h no m1ns ( decid+ f ! rcvd ~w :e!r "! 0
a s+le }ror 9 ! ?ird bit or two }rors1
"o 9 ! f/ bit & "o 9 ! second4 ,no matt}
:at cod+ s*eme is us$1 an 9correct
message cd 2 rcvd4 ,we cd transmit a
"<#jjj">1 h }rors 9 all ?ree bits1  #ccj
& rcv ! code~w "<#aaa">4 ,x is important
to make explicit assump;ns ab !
likelihood & 4tribu;n ( transmis.n }rors
s t1 9 a "picul> applica;n1 x w 2 "kn
:e!r a giv5 }ror detec;n s*eme is
appropriate4 ,we w assume t transmis.n
}rors >e r>e1 &1 t :5 !y d o3ur1 !y o3ur
9dep5d5tly 9 ea* bit2 t is1 if .2;p is !
probabil;y ( an }ror 9 "o bit & .2;q is
! probabil;y ( an }ror 9 a di6}5t bit1
!n ! probabil;y ( }rors o3urr+ 9 bo? (
~! bits at ! same "t is _% pq _:4 ,we w
al assume t a rcvd .2;n-tuple is decod$
9to a code~w t is close/ to x2 t is1 we
assume t ! rcvr uses
~1maximum-likelihood ~1decod+~'4   #h
7777777777777777777777777777777777777777
,image ,,id3 algcodes-b9>y-*annel
,descrip;n3 ,a s*ematic diagram ": a z}o
has probabilty ;p t x w 2 decod$ z a z}o
& probabil;y ;q t x w 2 decod$ z a "o1 :
>e repres5t$ by >r{s f #j to #j & #a to
#a1 respectively4  ,a "o has probabilty
;p t x w 2 decod$ z a "o & probabil;y ;q
t x w 2 decod$ z a z}o1 : >e        #cca
repres5t$ by >r{s f #a to #a & #j to #a1
respectively4
,figure  #h4f 4  ,b9>y symmetric *annel
gggggggggggggggggggggggggggggggggggggggg




















                                    #ccb
,transcrib} note3 ! image ) ,,id
algcodes-b9>y-*annel 2l;gs "h4  ,replace
? page ) ! 9dep5d5tly g5}at$ tactile
image4




















                                    #ccc
  ,a ~7b9>y symmetric *annel~' is a
model t 3si/s ( a transmitt} capable (
s5d+ a b9>y signal1 ei a #j or a #a1 tgr
) a rcvr4 ,let .2;p 2 ! probabil;y t !
signal is correctly rcvd4 ,!n
_% q .k #1-p _: is ! probabil;y ( an
9correct recep;n4 ,if a #a is s5t1 !n !
probabil;y t a #a is rcvd is .2;p & !
probabil;y t a #j is rcvd is .2;q
"<,figure #h4f">4 ,! probabil;y t no
}rors o3ur dur+ ! transmis.n ( a b9>y
code~w ( l5g? .2;n is _% p~n _:4 ,=
example1 if _% p .k #0.999 _: & a
message 3si/+ ( #aj1jjj bits is s5t1 !n
! probabil;y ( a p}fect transmis.n is
_% (0.999)~10, 000 `:`: #0.00005 _:
4
7777777777777777777777777777777777777777
,!orem  #h4g 4
  ,if a b9>y .2;n-tuple
_% (x1, ''', x;n") _: is transmitt$ acr
a b9>y symmetric *annel ) probabil;y
.2;p t no }ror w o3ur 9 ea* coord9ate1
!n ! probabil;y t "! >e }rors 9 exactly
.2;k coord9ates is                  #ccd
_%
,(n,)q~k"p~n-k
,(k,)
_:
4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,pro( 4
  ,fix .2;k di6}5t coord9ates4 ,we f/
compute ! probabil;y t an }ror has
o3urr$ 9 ? fix$ set ( coord9ates4 ,!
probabil;y ( an }ror o3urr+ 9 a "picul>
"o ( ~! .2;k coord9ates is .2;q2 !
probabil;y t an }ror w n o3ur 9 any ( !
rema9+ _% n-k _: coord9ates is .2;p4 ,!
probabil;y ( ea* ( ~! .2;n 9dep5d5t
ev5ts is _% q~k"p~n-k _:4 ,! numb} (
possible }ror patt}ns ) exactly .2;k
}rors o3urr+ is equal to
_%
,(n,) .k ?n& /k& (n-k)&#
,(k,)
_:
1 ! numb} ( comb9a;ns ( .2;n ?+s    #cce
tak5 .2;k at a "t4 ,ea* ( ~! }ror
patt}ns has probabil;y _% q~k"p~n-k _: (
o3urr+2 h;e1 ! probabil;y ( all ( ~!
}ror patt}ns is
_%
,(n,)q~k"p~n-k
,(k,)
_:
4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,example  #h4h 4
  ,suppose t _% p .k #0.995 _: & a
#ejj-bit message is s5t4 ,! probabil;y t
! message 0 s5t }ror-free is
_% p~n .k (0.995)~500 `:`: #0.082 _:
4 ,! probabil;y ( exactly "o }ror o3urr+
is
_%
,(n ,)qp~n-1 .k #500(0.005)(0.995)~499
`:`: #0.204
,(#1,)
_:
4 ,! probabil;y ( exactly two       #ccf
}rors is
_%
,(n ,)q~2"p~n-2 .k
?500*499/2#(0.005)~2"(0.995)~498 `:`:
#0.257
,(#2,)
_:
4 ,! probabil;y ( m ?an two }rors is
approximately
_% #1-0.082-0.204-0.257 .k #0.457 _:
4
gggggggggggggggggggggggggggggggggggggggg

      ,subsec;n ,block ,codes
  ,if we >e to develop e6ici5t
}ror-detect+ & }ror-correct+ codes1 we w
ne$ m sophi/icat$ ma!matical tools4
,gr|p !ory  w all{ fa/} me?ods ( 5cod+ &
decod+ messages4 ,a code is an
_% (n, m) _:-~1block ~1code if ! 9=ma;n
t is to 2 cod$ c 2 divid$ 9to blocks (
.2;m b9>y digits1 ea* ( : c 2 5cod$ 9to
.2;n b9>y digits4 ,m specifically1 an
_% (n, m) _:-block code 3si/s ( an
~15cod+ ~1func;n                    #ccg
_% ,e_3 `;,z2~m $o `;,z2~n _:
& a ~1decod+ ~1func;n
_% ,d_3 `;,z2~n $o `;,z2~m _:
4 ,a ~1code~w is any ele;t 9 ! image (
.2;,e4 ,we al require t .2;,e 2 "o-to-"o
s t two 9=ma;n blocks w n 2 5cod$ 9to !
same code~w4 ,if |r code is to 2
}ror-correct+1 !n .2;,d m/ 2 onto4
7777777777777777777777777777777777777777
,example  #h4i 4
  ,! ev5-p>;y cod+ sy/em develop$ to
detect s+le }rors 9 ,,ascii "*s is an
_% (8, 7) _:-block code4 ,! 5cod+ func;n
is
_% ,e(x7, x6, ''', x1) .k (x8, x7, ''',
x1) _:
1 ": _% x8 .k x7+x6+''' +x1 _: ) addi;n
9 _% `;,z2 _:4
gggggggggggggggggggggggggggggggggggggggg

  ,let _% _;x .k (x1, ''', x;n") _: &
_% _;y .k (y1, ''', y;n") _: 2 b9>y
.2;n-tuples4 ,! ~1,hamm+ ~14t.e  or
~14t.e~'1 _% d(_;x, _;y) _:1 2t
_% _;x _: & _% _;y _: is ! numb} (  #cch
bits 9 : _% _;x _: & _% _;y _: di6}4 ,!
4t.e 2t two code~ws is ! m9imum numb} (
transmis.n }rors requir$ to *ange "o
code~w 9to ! o!r4 ,! ~1m9imum ~14t.e = a
code1 _% d;min _:1 is ! m9imum ( all
4t.es _% d(_;x, _;y) _:1 ": _% _;x _: &
_% _;y _: >e 4t9ct code~ws4 ,!
~1wei<t~'1  _% w(_;x) _:1 ( a b9>y
code~w _% _;x _: is ! numb} ( #as 9
_% _;x _:4 ,cle>ly1
_% w(_;x) .k d(_;x, _#0) _:1 ":
_% _#0 .k (00 ''' 0) _:4
7777777777777777777777777777777777777777
,example  #h4aj 4
  ,let _% _;x .k (10101) _:1
_% _;y .k (11010) _:1 &
_% _;z .k (00011) _: 2 all ( ! code~ws 9
"s code .2;,c4 ,!n we h ! foll{+ ,hamm+
4t.es3
_% d(_;x, _;y) .k #4, d(_;x, _;z) .k #3,
d(_;y, _;z) .k #3 _:
4 ,! m9imum 4t.e  = ? code is #c4 ,we al
h ! foll{+ wei<ts3
_% w(_;x) .k #3, w(_;y) .k #3, w(_;z) .k
#2 _:                               #cci
4
gggggggggggggggggggggggggggggggggggggggg

  ,! foll{+ proposi;n li/s "s basic
prop}ties ab ! wei<t ( a code~w & ! 4t.e
2t two code~ws4 ,! pro( is left z an
ex}cise4
7777777777777777777777777777777777777777
,proposi;n  #h4aa 4
  ,let _% _;x _:1 _% _;y _:1 & _% _;z _:
2 b9>y .2;n-tuples4 ,!n

#a4 _% w(_;x) .k d(_;x, _#0) _:2
#b4 _% d(_;x, _;y) .1: #0 _:2
#c4 _% d(_;x, _;y) .k #0 _: exactly :5
  _% _;x .k _;y _:2
#d4 _% d(_;x, _;y) .k d(_;y, _;x) _:2
#e4
  _% d(_;x, _;y) "k: d(_;x, _;z)+d(_;z,
  _;y) _:
  4

gggggggggggggggggggggggggggggggggggggggg

  ,! wei<ts 9 a "picul> code >e     #cdj
usually m* easi} to compute ?an ! ,hamm+
4t.es 2t all code~ws 9 ! code4 ,if a
code is set up c>e;lly1 we c use ? fact
to |r advantage4
  ,suppose t _% _;x .k (1101) _: &
_% _;y .k (1100) _: >e code~ws 9 "s
code4 ,if we transmit _% (1101) _: & an
}ror o3urs 9 ! "rmo/ bit1 !n "<#aajj"> w
2 rcvd4 ,s9ce _% (1100) _: is a code~w1
! decod} w decode _% (1100) _: z !
transmitt$ message4 ,? code is cle>ly n
v appropriate = }ror detec;n4 ,! problem
is t _% d(_;x, _;y) .k #1 _:4 ,if
_% _;x .k (1100) _: &
_% _;y .k (1010) _: >e code~ws1 !n
_% d(_;x, _;y) .k #2 _:4 ,if _% _;x _:
is transmitt$ & a s+le }ror o3urs1 !n
_% _;y _: c n"e 2 rcvd4 ,table #h4ab
gives ! 4t.es 2t all #d-bit code~ws 9 :
! f/ ?ree bits c>ry 9=ma;n & ! f|r? is
an ev5 p>;y *eck bit4 ,we c see t !
m9imum 4t.e "h is #b2 h;e1 ! code is
suitable z a s+le }ror-detect+ code4
7777777777777777777777777777777777777777
,table  #h4ab 4  ,4t.es 2t #d-bit   #cda
code~ws
2 #jjjj2 #jjaa2 #jaja2 #jaaj2 #ajja2
  #ajaj2 #aajj2 #aaaa4
#jjjj2 #j2 #b2 #b2 #b2 #b2 #b2 #b2 #d4
#jjaa2 #b2 #j2 #b2 #b2 #b2 #b2 #d2 #b4
#jaja2 #b2 #b2 #j2 #b2 #b2 #d2 #b2 #b4
#jaaj2 #b2 #b2 #b2 #j2 #d2 #b2 #b2 #b4
#ajja2 #b2 #b2 #b2 #d2 #j2 #b2 #b2 #b4
#ajaj2 #b2 #b2 #d2 #b2 #b2 #j2 #b2 #b4
#aajj2 #b2 #d2 #b2 #b2 #b2 #b2 #j2 #b4
#aaaa2 #d2 #b2 #b2 #b2 #b2 #b2 #b2 #j4
gggggggggggggggggggggggggggggggggggggggg

  ,to det}m9e exactly :at ! }ror-detect+
& }ror-correct+ capabilities = a code
>e1 we ne$ to analyze ! m9imum 4t.e = !
code4 ,let _% _;x _: & _% _;y _: 2
code~ws4 ,if _% d(_;x, _;y) .k #1 _: &
an }ror o3urs ": _% _;x _: & _% _;y _:
di6}1 !n _% _;x _: is *ang$ to
_% _;y _:4 ,! rcvd code~w is _% _;y _: &
no }ror message is giv54 ,n{ suppose
_% d(_;x, _;y) .k #2 _:4 ,!n a s+le }ror
_c *ange _% _;x _: to _% _;y _:4 ,"!=e1
if _% d;min .k #2 _:1 we h !        #cdb
abil;y to detect s+le }rors4 ,h{"e1
suppose t _% d(_;x, _;y) .k #2 _:1
_% _;y _: is s5t1 & a noncode~w
_% _;z _: is rcvd s* t
_% d(_;x, _;z) .k d(_;y, _;z) .k #1 _:
4 ,!n ! decod} _c decide 2t _% _;x _: &
_% _;y _:4 ,ev5 ?|< we >e aw>e t an }ror
has o3urr$1 we d n "k :at ! }ror is4
  ,suppose _% d;min .1: #3 _:4 ,!n !
maximum-likelihood decod+ s*eme corrects
all s+le }rors4 ,/>t+ ) a code~w
_% _;x _:1 an }ror 9 ! transmis.n ( a
s+le bit gives _% _;y _: )
_% d(_;x, _;y) .k #1 _:1 b
_% d(_;z, _;y) .1: #2 _: = any o!r
code~w _% _;z /.k _;x _:4 ,if we d n
require ! correc;n ( }rors1 !n we c
detect multiple }rors :5 a code has a
m9imum 4t.e t is grt} ?an or equal to
#c4
7777777777777777777777777777777777777777
,!orem  #h4ac 4
  ,let .2;,c 2 a code )
_% d;min .k #2n+1 _:4 ,!n .2;,c c
correct any .2;n or few} }rors4     #cdc
,fur!rmore1 any _% #2n _: or few} }rors
c 2 detect$ 9 .2;,c4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,pro( 4
  ,suppose t a code~w _% _;x _: is s5t &
! ~w _% _;y _: is rcvd ) at mo/ .2;n
}rors4 ,!n _% d(_;x, _;y) "k: n _:4 ,if
_% _;z _: is any code~w o!r ?an
_% _;x _:1 !n
_% #2n+1 "k: d(_;x, _;z) "k: d(_;x,
_;y)+d(_;y, _;z) "k: n+d(_;y, _;z) _:
4 ,h;e1 _% d(_;y, _;z) .1: n+1 _: &
_% _;y _: w 2 correctly decod$ z
_% _;x _:4 ,n{ suppose t _% _;x _: is
transmitt$ & _% _;y _: is rcvd & t at
l1/ "o }ror  has o3urr$1 b n m ?an
_% #2n _: }rors4 ,!n
_% #1 "k: d(_;x, _;y) "k: #2n _:4 ,s9ce
! m9imum 4t.e 2t code~ws is _% #2n+1 _:1
_% _;y _: _c 2 a code~w4 ,3sequ5tly1 !
code c detect 2t #a & _% #2n _: }rors4
gggggggggggggggggggggggggggggggggggggggg
                                    #cdd
7777777777777777777777777777777777777777
,example  #h4ad 4
  ,9 ,table #h4ae1 ! code~ws
_% _;c1 .k (00000) _:1
_% _;c2 .k (00111) _:1
_% _;c3 .k (11100) _:1 &
_% _;c4 .k (11011) _: det}m9e a s+le
}ror-correct+ code4
7777777777777777777777777777777777777777
,table  #h4ae 4  ,hamm+ 4t.es = an
}ror-correct+ code
2 #jjjjj2 #jjaaa2 #aaajj2 #aajaa4
#jjjjj2 #j2 #c2 #c2 #d4
#jjaaa2 #c2 #j2 #d2 #c4
#aaajj2 #c2 #d2 #j2 #c4
#aajaa2 #d2 #c2 #c2 #j4
gggggggggggggggggggggggggggggggggggggggg

gggggggggggggggggggggggggggggggggggggggg

      ,subsec;n ,hi/orical ,note
  ,mod}n cod+ !ory 2gan 9 #aidh ) ;,c4
,%annon's  pap}1 8,a ,ma!matical ,!ory (
,9=ma;n0 .<#g.>4 ,? pap} (f}$ an example
( an algebraic code1 & ,%annon's    #cde
,!orem proclaim$ exactly h{ gd codes cd
2 expect$ to be4 ,ri*>d ,hamm+  2gan "w+
) l9e> codes at ,bell ,labs 9 ! late
#aidjs & e>ly #aiejs af 2com+ fru/rat$
2c ! programs t he 0 runn+ cd n recov} f
simple }rors g5}at$ by noise4 ,cod+ !ory
has gr{n trem5d|sly 9 ! pa/ s"eal
decades4 .7,! ,!ory ( ,}ror-,correct+.'
.1,codes.'1 by ,mac,williams & ,sloane
.<#e.>1 publi%$ 9 #aigg1 alr 3ta9$ ov}
#aejj ref};es4 ,l9e> codes "<,re$-,mull}
_% (32, 6) _:-block codes"> 7 us$ on
,,nasa's ,m>9} space probes4 ,m rec5t
space probes s* z ,voyag} h us$ :at >e
call$ 3volu;n codes4 ,curr5tly1 v active
rese>* is 2+ d"o ) ,goppa codes1 : >e
h1vily dep5d5t on algebraic geometry4

    ,sec;n #h4b ,l9e> ,codes
  ,to ga9 m k ( a "picul> code & develop
m e6ici5t te*niques ( 5cod+1 decod+1 &
}ror detec;n1 we ne$ to add addi;nal
/ructure to |r codes4 ,"o way to
a3ompli% ? is to require t ! code al 2 a
gr|p4 ,a ~1gr|p ~1code  is a code   #cdf
t is al a subgr|p ( _% `;,z2~n _:4
  ,to *eck t a code is a gr|p code1 we
ne$ only v}ify "o ?+4 ,if we add any two
ele;ts 9 ! code1 ! result m/ 2 an
.2;n-tuple t is ag 9 ! code4 ,x is n nec
to *eck t ! 9v}se ( ! .2;n-tuple is 9 !
code1 s9ce e code~w is xs {n 9v}se1 nor
is x nec to *eck t _% _#0 _: is a
code~w4 ,= 9/.e1
_% (11000101)+(11000101) .k
(00000000) _:
4
7777777777777777777777777777777777777777
,example  #h4af 4
  ,suppose t we h a code t 3si/s ( !
foll{+ #g-tuples3








                                    #cdg
_%
(0000000)   (0001111)   (0010101)
(0011010)
(0100110)   (0101001)   (0110011)
(0111100)
(1000011)   (1001100)   (1010110)
(1011001)
(1100101)   (1101010)   (1110000)
(1111111)
_:
4 ,x is a /rai<t=w>d ?|< t$i|s task to
v}ify t ? code is al a subgr|p (
_% `;,z2~7 _: &1 "!=e1 a gr|p code4 ,?
code is a s+le }ror-detect+ & s+le
}ror-correct+  code1 b x is a l;g &
t$i|s process to compute all ( ! 4t.es
2t  pairs ( code~ws to det}m9e t
_% d;min .k #3 _:4 ,x is m* easi} to see
t ! m9imum wei<t ( all ! nonz}o code~ws
is #c4 ,z we w soon see1 ? is no
co9cid;e4 ,h{"e1 ! rela;n%ip 2t wei<ts &
4t.es 9 a "picul> code is h1vily dep5d5t
on ! fact t ! code is a gr|p4
gggggggggggggggggggggggggggggggggggggggg
                                    #cdh
7777777777777777777777777777777777777777
,lemma  #h4ag 4
  ,let _% _;x _: & _% _;y _: 2 b9>y
.2;n-tuples4 ,!n
_% w(_;x+_;y) .k d(_;x, _;y) _:4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,pro( 4
  ,suppose t _% _;x _: & _% _;y _: >e
b9>y .2;n-tuples4 ,!n ! 4t.e 2t
_% _;x _: & _% _;y _: is exactly ! numb}
( places 9 : _% _;x _: & _% _;y _: di6}4
,b _% _;x _: & _% _;y _: di6} 9 a
"picul> coord9ate exactly :5 ! sum 9 !
coord9ate is #a1 s9ce
_%
#1+1 .k #0
#0+0 .k #0
#1+0 .k #1
#0+1 .k #1
_:
4 ,3sequ5tly1 ! wei<t ( ! sum m/ 2 !
4t.e 2t ! two code~ws4
                                    #cdi
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,!orem  #h4ah 4
  ,let _% d;min _: 2 ! m9imum 4t.e = a
gr|p code .2;,c4 ,!n _% d;min _: is !
m9imum wei<t ( all ! nonz}o code~ws 9
.2;,c4 ,t is1
_% d;min .k min .(w(_;x)_3_;x /.k
_#0.) _:
4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,pro( 4
  ,obs}ve t
_%
d;min"
.k min .(d(_;x, _;y)_3_;x /.k _;y.)
.k min .(d(_;x, _;y)_3_;x+_;y /.k _#0.)
.k min .(w(_;x+_;y)_3_;x+_;y /.k _#0.)
.k min .(w(_;z)_3_;z /.k _#0.)
_:
4
                                    #cej
gggggggggggggggggggggggggggggggggggggggg

      ,subsec;n ,l9e> ,codes
  ,f ,example #h4af1 x is n{ easy to
*eck t ! m9imum nonz}o wei<t is #c2 h;e1
! code does 9de$ detect & correct all
s+le }rors4 ,we h n{ r$uc$ ! problem (
f9d+ 8gd0 codes to t ( g5}at+ gr|p
codes4 ,"o easy way to g5}ate gr|p codes
is to employ a bit ( matrix !ory4
  ,def9e ! ~19n} ~1product  ( two b9>y
.2;n-tuples to 2
_% _;x*_;y .k x1y1+''' +x;n"y;n _:
1 ": _% _;x .k (x1, x2, ''', x;n")~t _:
& _% _;y .k (y1, y2, ''', y;n")~t _: >e
column vectors4  #i  ,= example1 if
_% _;x .k (011001)~t _: &
_% _;y .k (110101)~t _:1 !n
_% _;x*_;y .k #0 _:4 ,we c al look at an
9n} product z ! product ( a r{ matrix )
a column matrix2 t is1



                                    #cea
_%
_;x*_;y                       .k
_;x~t"_;y
.k ,(x1 x2 ''' x;n",),(y1  ,)
                     ,(y2  ,)
                     ,(''' ,)
                     ,(y;n",)
.k x1y1+x2y2+''' +x;n"y;n
_:
4
7777777777777777777777777777777777777777
,example  #h4ai 4
  ,suppose t ! ~ws to 2 5cod$ 3si/ ( all
b9>y #c-tuples & t |r 5cod+ s*eme is
ev5-p>;y4 ,to 5code an >bitr>y #c-tuple1
we add a f|r? bit to obta9 an ev5 numb}
( #as4 ,notice t an >bitr>y .2;n-tuple
_% _;x .k (x1, x2, ''', x;n")~t _: has
an ev5 numb} ( #as exactly :5
_% x1+x2+''' +x;n .k #0 _:2 h;e1 a
#d-tuple _% _;x .k (x1, x2, x3, x4)~t _:
has an ev5 numb} ( #as if
_% x1+x2+x3+x4 .k #0 _:1 or

                                    #ceb
_%
_;x*_#1 .k _;x~t"_#1 .k ,(x1 x2 x3
x4,),(#1,) .k #0
-
,(#1,)
-
,(#1,)
-
,(#1,)
_:
4 ,? example l1ds u to hope t "! is a
3nec;n 2t matrices & cod+ !ory4
gggggggggggggggggggggggggggggggggggggggg

  ,let _% `;,m;m`*n"(`;,z2) _: d5ote !
set ( all _% m`*n _: matrices ) 5tries 9
_% `;,z2 _:4 ,we d matrix op}a;ns z
usual except t all |r addi;n &
multiplica;n op}a;ns o3ur 9 _% `;,z2 _:4
,def9e ! ~1null ~1space ( a matrix
_% ,h `e `;,m;m`*n"(`;,z2) _: to 2 ! set
( all b9>y .2;n-tuples _% _;x _: s* t
_% ,h_;x .k _#0 _:4 ,we d5ote ! null
space ( a matrix .2;,h by
_% ,null(,h) _:4                    #cec
7777777777777777777777777777777777777777
,example  #h4bj 4
  ,suppose t
_%
,h .k ,(#0 #1 #0 #1 #0,)
      ,(#1 #1 #1 #1 #0,)
      ,(#0 #0 #1 #1 #1,)
_:
4 ,= a #e-tuple
_% _;x .k (x1, x2, x3, x4, x5)~t _: to 2
9 ! null space ( .2;,h1
_% ,h_;x .k _#0 _:4 ,equival5tly1 !
foll{+ sy/em ( equa;ns m/ 2 satisfi$3
_%
x2+x4       .k #0
x1+x2+x3+x4 .k #0
x3+x4+x5    .k #0
_:
4 ,! set ( b9>y #e-tuples satisfy+ ~!
equa;ns is
_% (00000)(11110)(10101)(01011) _:
4 ,? code is easily det}m9$ to 2 a gr|p
code4
gggggggggggggggggggggggggggggggggggggggg
                                    #ced
7777777777777777777777777777777777777777
,!orem  #h4ba 4
  ,let .2;,h 2 9
_% `;,m;m`*n"(`;,z2) _:4 ,!n ! null
space ( .2;,h is a gr|p code4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,pro( 4
  ,s9ce ea* ele;t ( _% `;,z2~n _: is xs
{n 9v}se1 ! only ?+ t r1lly ne$s to 2
*eck$ "h is closure4 ,let
_% _;x, _;y `e ,null(,h) _: = "s matrix
.2;,h 9 _% `;,m;m`*n"(`;,z2) _:4 ,!n
_% ,h_;x .k _#0 _: & _% ,h_;y .k _#0 _:4
,s
_% ,h(_;x+_;y) .k ,h_;x+,h_;y .k _#0+_#0
.k _#0 _:
4 ,h;e1 _% _;x+_;y _: is 9 ! null space
( .2;,h & "!=e m/ 2 a code~w4
gggggggggggggggggggggggggggggggggggggggg

  ,a code is a ~1l9e> ~1code  if x is
det}m9$ by ! null space ( "s matrix
_% ,h `e `;,m;m`*n"(`;,z2) _:4      #cee
7777777777777777777777777777777777777777
,example  #h4bb 4
  ,let .2;,c 2 ! code giv5 by ! matrix
_%
,h .k ,(#0 #0 #0 #1 #1 #1,)
      ,(#0 #1 #1 #0 #1 #1,)
      ,(#1 #0 #1 #0 #0 #1,)
_:
4 ,suppose t ! #f-tuple
_% _;x .k (010011)~t _: is rcvd4 ,x is a
simple matt} ( matrix multiplica;n to
det}m9e :e!r or n _% _;x _: is a code~w4
,s9ce
_%
,h_;x .k ,(#0,)
         ,(#1,)
         ,(#1,)
_:
1 ! rcvd ~w is n a code~w4 ,we m/ ei
attempt to correct ! ~w or reque/ t x 2
transmitt$ ag4
gggggggggggggggggggggggggggggggggggggggg

    ,sec;n #h4c ,p>;y-,*eck & ,g5}ator
    ,matrices                       #cef
  ,we ne$ to f9d a sy/ematic way (
g5}at+ l9e> codes z well z fa/ me?ods (
decod+4 ,by exam9+ ! prop}ties ( a
matrix .2;,h & by c>e;lly *oos+ .2;,h1 x
is possible to develop v e6ici5t me?ods
( 5cod+ & decod+ messages4 ,to ? 5d1 we
w 9troduce /&>d g5}ator & canonical
p>;y-*eck matrices4
  ,suppose t .2;,h is an _% m`*n _:
matrix ) 5tries 9 _% `;,z2 _: &
_% n .1 m _:4 ,if ! la/ .2;m columns ( !
matrix =m ! _% m`*m _: id5t;y matrix1
_% ,i;m _:1 !n ! matrix is a ~1canonical
~1p>;y-*eck ~1matrix~'4  ,m
specifically1 _% ,h .k (,a|,i;m") _:1 ":
.2,a is ! _% m`*(n-m) _: matrix
_%
,(a11    a12    ''' a;#1, n-m",)
,(a21    a22    ''' a;#2, n-m",)
,('''    '''    ''' '''       ,)
,(a;m"1" a;m"2" ''' a;m, n-m  ,)
_:
& _% ,i;m _: is ! _% m`*m _: id5t;y
matrix
                                    #ceg
_%
,(#1  #0  ''' #0 ,)
,(#0  #1  ''' #0 ,)
,(''' ''' ''' ''',)
,(#0  #0  ''' #1 ,)
_:
4 ,) ea* canonical p>;y-*eck matrix we c
associate an _% n`*(n-m) _: ~7/&>d
g5}ator matrix~'
_% ,g .k (?,i;n-m"/,a#) _:
4 ,|r goal w 2 to %{ t an _% _;x _:
satisfy+ _% ,g_;x .k _;y _: exi/s if &
only if _% ,h_;y .k _#0 _:4 ,giv5 a
message block _% _;x _: to 2 5cod$1 !
matrix .2;,g w all{ u to qkly 5code x
9to a l9e> code~w _% _;y _:4
7777777777777777777777777777777777777777
,example  #h4bc 4
  ,suppose t we h ! foll{+ ei<t ~ws to 2
5cod$3
_% (000), (001), (010), ''', (111) _:
4 ,=


                                    #ceh
_%
,a .k ,(#0 #1 #1,)
      ,(#1 #1 #0,)
      ,(#1 #0 #1,)
_:
1 ! associat$ /&>d g5}ator & canonical
p>;y-*eck matrices >e
_%
,g .k ,(#1 #0 #0,)
      ,(#0 #1 #0,)
      ,(#0 #0 #1,)
      ,(#0 #1 #1,)
      ,(#1 #1 #0,)
      ,(#1 #0 #1,)
_:
&
_%
,h .k ,(#0 #1 #1 #1 #0 #0,)
      ,(#1 #1 #0 #0 #1 #0,)
      ,(#1 #0 #1 #0 #0 #1,)
_:
1 respectively4
  ,obs}ve t ! r{s 9 .2;,h  repres5t !
p>;y *ecks on c}ta9 bit posi;ns 9 a
#f-tuple4 ,! #as 9 ! id5t;y matrix  #cei
s}ve z p>;y *ecks = ! #as 9 ! same r{4
,if
_% _;x .k (x1, x2, x3, x4, x5, x6) _:1
!n
_%
_#0 .k ,h_;x .k ,(x2+x3+x4,)
                ,(x1+x2+x5,)
                ,(x1+x3+x6,)
_:
1 : yields a sy/em ( equa;ns3
_%
x2+x3+x4 .k #0
x1+x2+x5 .k #0
x1+x3+x6 .k #0
_:
4 ,"h _% x4 _: s}ves z a *eck bit =
_% x2 _: & _% x3 _:2 _% x5 _: is a *eck
bit = _% x1 _: & _% x2 _:2 & _% x6 _: is
a *eck bit = _% x1 _: & _% x3 _:4 ,!
id5t;y matrix keeps _% x4 _:1 _% x5 _:1
& _% x6 _: f hav+ to *eck on ea* o!r4
,h;e1 _% x1 _:1 _% x2 _:1 & _% x3 _: c 2
>bitr>y b _% x4 _:1 _% x5 _:1 & _% x6 _:
m/ 2 *os5 to 5sure p>;y4 ,! null space (
.2;,h is easily comput$ to 2        #cfj
_%
(000000) (001101) (010110) (011011)
(100011) (101110) (110101) (111000).
_:
,an ev5 easi} way to compute ! null
space is ) ! g5}ator matrix .2;,g
"<,table #h4bd">4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,table  #h4bd 4  ,a matrix-g5}at$ code
,message ,~w _% _;x _: 2 ,code~w
  _% ,g_;x _: 4
#jjj2 #jjjjjj4
#jja2 #jjaaja4
#jaj2 #jajaaj4
#jaa2 #jaajaa4
#ajj2 #ajjjaa4
#aja2 #ajaaaj4
#aaj2 #aajaja4
#aaa2 #aaajjj4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,!orem  #h4be 4                     #cfa
  ,if _% ,h `e `;,m;m`*n"(`;,z2) _: is a
canonical p>;y-*eck matrix1 !n
_% ,null(,h) _: 3si/s ( all
_% _;x `e `;,z2~n _: ~: f/ _% n-m _:
bits >e >bitr>y b ~: la/ .2;m bits >e
det}m9$ by _% ,h_;x .k _#0 _:4 ,ea* ( !
la/ .2;m bits s}ves z an ev5 p>;y *eck
bit = "s ( ! f/ _% n-m _: bits4 ,h;e1
.2;,h gives rise to an
_% (n, n-m) _:-block code4
gggggggggggggggggggggggggggggggggggggggg

  ,we l1ve ! pro( ( ? !orem z an
ex}cise4 ,9 li<t ( ! !orem1 ! f/
_% n-m _: bits 9 _% _;x _: >e call$
~19=ma;n ~1bits & ! la/ .2;m bits >e
call$ ~1*eck ~1bits~'4 ,9
,example #h4bc1 ! f/ ?ree bits >e !
9=ma;n bits & ! la/ ?ree >e ! *eck bits4
7777777777777777777777777777777777777777
,!orem  #h4bf 4
  ,suppose t .2;,g is an _% n`*k _: /&>d
g5}ator matrix4 ,!n
_% ,c .k .(_;y_3,g_;x .k _;y for _;x `e
`;,z2~k".) _:                       #cfb
is an _% (n, k) _:-block code4 ,m
specifically1 .2;,c is a gr|p code4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,g_;x1 .k _;y1 _: &
_% ,g_;x2 .k _;y2 _: 2 two code~ws4 ,!n
_% _;y1+_;y2 _: is 9 .2;,c s9ce
_% ,g(_;x1+_;x2) .k ,g_;x1+,g_;x2 .k
_;y1+_;y2 _:
4 ,we m/ al %{ t two message blocks _c 2
5cod$ 9to ! same code~w4 ,t is1 we m/ %{
t if _% ,g_;x .k ,g_;y _:1 !n
_% _;x .k _;y _:4 ,suppose t
_% ,g_;x .k ,g_;y _:4 ,!n
_% ,g_;x-,g_;y .k ,g(_;x-_;y) .k _#0 _:
4 ,h{"e1 ! f/ .2;k coord9ates 9
_% ,g(_;x-_;y) _: >e exactly
_% x1-y1, ''', x;k"-y;k _:1 s9ce !y >e
det}m9$ by ! id5t;y matrix1 _% ,i;k _:1
"p ( .2;,g4 ,h;e1
_% ,g(_;x-_;y) .k _#0 _: exactly :5
_% _;x .k _;y _:4
                                    #cfc
gggggggggggggggggggggggggggggggggggggggg

  ,2f we c prove ! rela;n%ip 2t
canonical p>;y-*eck matrices & /&>d
g5}at+ matrices1 we ne$ to prove a
lemma4
7777777777777777777777777777777777777777
,lemma  #h4bg 4
  ,let _% ,h .k (,a|,i;m") _: 2 an
_% m`*n _: canonical p>;y-*eck matrix &
_% ,g .k (?,i;n-m"/,a#) _: 2 !
correspond+ _% n`*(n-m) _: /&>d g5}ator
matrix4 ,!n _% ,h,g .k _#0 _:4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,c .k ,h,g _:4 ,! _% ij _:?
5try 9 .2;,c is





                                    #cfd
_%
c;ij"
                             .k ".,s%k
.k #1<n}h;ik"g;kj"
.k ".,s%k .k #1<n-m}h;ik"g;kj"+".,s%k .k
n-m+1<n}h;ik"g;kj"
.k ".,s%k .k #1<n-m}a;ik".d;kj"+".,s%k
.k n-m+1<n}.d;i-(m-n), k"a;kj"
.k a;ij"+a;ij"
.k #0
_:
1 ":
_%
.d;ij .k .,(#1 i .k j
         .,(#0 i /.k j
_:
is ! ,kroneck} delta4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,!orem  #h4bh 4
  ,let _% ,h .k (,a|,i;m") _: 2 an
_% m`*n _: canonical p>;y-*eck matrix &
let _% ,g .k (?,i;n-m"/,a#) _: 2 !
_% n`*(n-m) _: /&>d g5}ator matrix  #cfe
associat$ ) .2;,h4 ,let .2;,c 2 ! code
g5}at$ by .2;,g4 ,!n _% _;y _: is 9
.2;,c if & only if _% ,h_;y .k _#0 _:4
,9 "picul>1 .2;,c is a l9e> code )
canonical p>;y-*eck matrix .2;,h4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,pro( 4
  ,f/ suppose t _% _;y `e ,c _:4 ,!n
_% ,g_;x .k _;y _: = "s
_% _;x `e `;,z2~m _:4 ,by ,lemma #h4bg1
_% ,h_;y .k ,h,g_;x .k _#0 _:4
  ,3v}sely1 suppose t
_% _;y .k (y1, ''', y;n")~t _: is 9 !
null space ( .2;,h4 ,we ne$ to f9d an
_% _;x _: 9 _% `;,z2~n-m _: s* t
_% ,g_;x~t .k _;y _:4 ,s9ce
_% ,h_;y .k _#0 _:1 ! foll{+ set (
equa;ns m/ 2 satisfi$3




                                    #cff
_%
a11y1+a12y2+''' +a;#1,
n-m"y;n-m"+y;n-m+1"      .k #0
a21y1+a22y2+''' +a;#2,
n-m"y;n-m"+y;n-m+2"      .k #0
'''
a;m"1"y1+a;m"2"y2+''' +a;m,
n-m"y;n-m"+y;n-m+m" .k #0
_:
4 ,equival5tly1 _% y;n-m+1, ''', y;n _:
>e det}m9$ by _% y1, ''', y;n-m _:3
_%
y;n-m+1" .k a11y1+a12y2+''' +a;#1,
n-m"y;n-m"
y;n-m+2" .k a21y1+a22y2+''' +a;#2,
n-m"y;n-m"
'''
y;n"     .k a;m"1"y1+a;m"2"y2+''' +a;m,
n-m"y;n-m
_:
4 ,3sequ5tly1 we c let _% x;i .k y;i _:
= _% i .k #1, ''', n-m _:4
gggggggggggggggggggggggggggggggggggggggg

  ,x wd 2 help;l if we cd compute   #cfg
! m9imum 4t.e ( a l9e> code directly f
xs matrix .2;,h 9 ord} to det}m9e !
}ror-detect+ & }ror-correct+
capabilities ( ! code4 ,suppose t
_%
_;e1   .k (100 ''' 00)~t"
_;e2   .k (010 ''' 00)~t"
'''
_;e;n" .k (000 ''' 01)~t
_:
>e ! .2;n-tuples 9 _% `;,z2~n _: ( wei<t
#a4 ,= an _% m`*n _: b9>y matrix .2;,h1
_% ,h_;e;i _: is exactly ! .2i? column (
! matrix .2;,h4
7777777777777777777777777777777777777777
,example  #h4bi 4
  ,obs}ve t
_%
,(#1 #1 #1 #0 #0,),(#0,) .k ,(#1,)
,(#1 #0 #0 #1 #0,),(#1,)    ,(#0,)
,(#1 #1 #0 #0 #1,),(#0,)    ,(#1,)
                  ,(#0,)
                  ,(#0,)
_:
4                                   #cfh
gggggggggggggggggggggggggggggggggggggggg

  ,we /ate ? result 9 ! foll{+ proposi;n
& l1ve ! pro( z an ex}cise4
7777777777777777777777777777777777777777
,proposi;n  #h4cj 4
  ,let _% _;e;i _: 2 ! b9>y .2;n-tuple )
a #a 9 ! .2i? coord9ate & #j's else": &
suppose t _% ,h `e `;,m;m`*n"(`;,z2) _:4
,!n _% ,h_;e;i _: is ! .2i? column ( !
matrix .2;,h4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,!orem  #h4ca 4
  ,let .2;,h 2 an _% m`*n _: b9>y
matrix4 ,!n ! null space ( .2;,h is a
s+le }ror-detect+ code if & only if no
column ( .2;,h 3si/s 5tirely ( z}os4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,pro( 4
  ,suppose t _% ,null(,h) _: is a s+le
}ror-detect+ code4 ,!n ! m9imum     #cfi
4t.e ( ! code m/ 2 at l1/ #b4 ,s9ce !
null space is a gr|p code1 x is su6ici5t
to require t ! code 3ta9 no code~ws (
less ?an wei<t #b o!r ?an ! z}o code~w4
,t is1 _% _;e;i _: m/ n 2 a code~w =
_% i .k #1, ''', n _:4 ,s9ce
_% ,h_;e;i _: is ! .2i? column ( .2;,h1
! only way 9 : _% _;e;i _: cd 2 9 ! null
space ( .2;,h wd 2 if ! .2i? column 7
all z}os1 : is impossible2 h;e1 ! code
m/ h ! capabil;y to detect at l1/ s+le
}rors4
  ,3v}sely1 suppose t no column ( .2;,h
is ! z}o column4 ,by ,proposi;n #h4cj1
_% ,h_;e;i /.k _#0 _:4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,example  #h4cb 4
  ,if we 3sid} ! matrices
_%
,h1 .k ,(#1 #1 #1 #0 #0,)
       ,(#1 #0 #0 #1 #0,)
       ,(#1 #1 #0 #0 #1,)
_:                                  #cgj
&
_%
,h2 .k ,(#1 #1 #1 #0 #0,)
       ,(#1 #0 #0 #0 #0,)
       ,(#1 #1 #0 #0 #1,)
_:
1 !n ! null space ( _% ,h1 _: is a s+le
}ror-detect+ code & ! null space (
_% ,h2 _: is n4
gggggggggggggggggggggggggggggggggggggggg

  ,we c ev5 d bett} ?an ,!orem #h4ca4 ,?
!orem gives u 3di;ns on a matrix .2;,h t
tell u :5 ! m9imum wei<t ( ! code =m$ by
! null space ( .2;,h is #b4 ,we c al
det}m9e :5 ! m9imum 4t.e ( a l9e> code
is #c by exam9+ ! correspond+ matrix4
7777777777777777777777777777777777777777
,example  #h4cc 4
  ,if we let
_%
,h .k ,(#1 #1 #1 #0,)
      ,(#1 #0 #0 #1,)
      ,(#1 #1 #0 #0,)
_:                                  #cga
& want to det}m9e :e!r or n .2;,h is !
canonical p>;y-*eck matrix = an
}ror-correct+ code1 x is nec to make
c}ta9 t _% ,null(,h) _: does n 3ta9 any
#d-tuples ( wei<t #b4 ,t is1
_% (1100) _:1 _% (1010) _:1
_% (1001) _:1 _% (0110) _:1
_% (0101) _:1 & _% (0011) _: m/ n 2 9
_% ,null(,h) _:4 ,! next !orem /ates t
we c 9de$ det}m9e t ! code g5}at$ by
.2;,h is }ror-correct+ by exam9+ !
columns ( .2;,h4 ,notice 9 ? example t n
only does .2;,h h no z}o columns1 b al t
no two columns >e ! same4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,!orem  #h4cd 4
  ,let .2;,h 2 a b9>y matrix4 ,! null
space ( .2;,h is a s+le }ror-correct+
code if & only if .2;,h does n 3ta9 any
z}o columns & no two columns ( .2;,h >e
id5tical4
gggggggggggggggggggggggggggggggggggggggg
                                    #cgb
7777777777777777777777777777777777777777
,pro( 4
  ,! .2;n-tuple _% _;e;i"+_;e;j _: has
#as 9 ! .2i? & .2j? 5tries & #js else":1
& _% w(_;e;i"+_;e;j") .k #2 _: =
_% i /.k j _:4 ,s9ce
_% _#0 .k ,h(_;e;i"+_;e;j") .k
,h_;e;i"+,h_;e;j _:
c only o3ur if ! .2i? & .2j? columns >e
id5tical1 ! null space ( .2;,h is a s+le
}ror-correct+ code4
gggggggggggggggggggggggggggggggggggggggg

  ,suppose n{ t we h a canonical
p>;y-*eck matrix .2;,h ) ?ree r{s4 ,!n
we mi<t ask h{ _m m columns we c add to
! matrix & / h a null space t is a s+le
}ror-detect+ & s+le }ror-correct+ code4
,s9ce ea* column has ?ree 5tries1 "! >e
_% #2~3 .k #8 _: possible 4t9ct columns4
,we _c add ! columns



                                    #cgc
_%
,(#0,), ,(#1,), ,(#0,), ,(#0,)
,(#0,)  ,(#0,)  ,(#1,)  ,(#0,)
,(#0,)  ,(#0,)  ,(#0,)  ,(#1,)
_:
4 ,s we c add z _m z f|r columns & /
ma9ta9 a m9imum 4t.e ( #c4
  ,9 g5}al1 if .2;,h is an _% m`*n _:
canonical p>;y-*eck matrix1 !n "! >e
_% n-m _: 9=ma;n posi;ns 9 ea* code~w4
,ea* column has .2;m bits1 s "! >e
_% #2~m _: possible 4t9ct columns4 ,x is
nec t ! columns
_% _#0, _;e1, ''', _;e;m _: 2 exclud$1
l1v+ _% #2~m"-(1+m) _: rema9+ columns =
9=ma;n if we >e / to ma9ta9 ! abil;y n
only to detect b al to correct s+le
}rors4

    ,sec;n #h4d ,e6ici5t ,decod+
  ,we >e n{ at ! /age ": we >e able to
g5}ate l9e> codes t detect & correct
}rors fairly easily1 b x is / a "t-3sum+
process to decode a rcvd .2;n-tuple &
det}m9e : is ! close/ code~w1 2c !  #cgd
rcvd .2;n-tuple m/ 2 comp>$ to ea*
possible code~w to det}m9e ! prop}
decod+4 ,? c 2 a s}i|s imp$i;t if ! code
is v l>ge4
7777777777777777777777777777777777777777
,example  #h4ce 4
  ,giv5 ! b9>y matrix
_%
,h .k ,(#1 #1 #1 #0 #0,)
      ,(#0 #1 #0 #1 #0,)
      ,(#1 #0 #0 #0 #1,)
_:
& ! #e-tuples _% _;x .k (11011)~t _: &
_% _;y .k (01011)~t _:1 we c compute
_%
,h_;x .k ,(#0,)and,h_;y .k ,(#1,)
         ,(#0,)            ,(#0,)
         ,(#0,)            ,(#1,)
_:
4 ,h;e1 _% _;x _: is a code~w &
_% _;y _: is n1 s9ce _% _;x _: is 9 !
null space & _% _;y _: is n4 ,notice t
_% ,h_;y _: is id5tical to ! f/ column (
.2;,h4 ,9 fact1 ? is ": ! }ror o3urr$4
,if we flip ! f/ bit 9 _% _;y _: f  #cge
#j to #a1 !n we obta9 _% _;x _:4
gggggggggggggggggggggggggggggggggggggggg

  ,if .2;,h is an _% m`*n _: matrix &
_% _;x `e `;,z2~n _:1 !n we say t !
~1syndrome  ( _% _;x _: is _% ,h_;x _:4
,! foll{+ proposi;n all{s ! qk detec;n &
correc;n ( }rors4
7777777777777777777777777777777777777777
,proposi;n  #h4cf 4
  ,let ! _% m`*n _: b9>y matrix .2;,h
det}m9e a l9e> code & let _% _;x _: 2 !
rcvd .2;n-tuple4 ,write _% _;x _: z
_% _;x .k _;c+_;e _:1 ": _% _;c _: is !
transmitt$ code~w & _% _;e _: is !
transmis.n }ror4 ,!n ! syndrome
_% ,h_;x _: ( ! rcvd code~w _% _;x _: is
al ! syndrome ( ! }ror _% _;e _:4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,pro( 4
  ,! pro( foll{s f ! fact t
_% ,h_;x .k ,h(_;c+_;e) .k ,h_;c+,h_;e
.k _#0+,h_;e .k ,h_;e _:            #cgf
4
gggggggggggggggggggggggggggggggggggggggg

  ,? proposi;n tells u t ! syndrome ( a
rcvd ~w dep5ds solely on ! }ror & n on !
transmitt$ code~w4 ,! pro( ( ! foll{+
!orem foll{s immly f ,proposi;n #h4cf &
f ! fact t _% ,h_;e _: is ! .2i? column
( ! matrix .2;,h4
7777777777777777777777777777777777777777
,!orem  #h4cg 4
  ,let _% ,h `e `;,m;m`*n"(`;,z2) _: &
suppose t ! l9e> code correspond+ to
.2;,h is s+le }ror-correct+4 ,let
_% _;r _: 2 a rcvd .2;n-tuple t 0
transmitt$ ) at mo/ "o }ror4 ,if !
syndrome ( _% _;r _: is _% _#0 _:1 !n no
}ror has o3urr$2 o!rwise1 if ! syndrome
( _% _;r _: is equal to "s column (
.2;,h1 say ! .2i? column1 !n ! }ror has
o3urr$ 9 ! .2i? bit4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,example  #h4ch 4                   #cgg
  ,3sid} ! matrix
_%
,h .k ,(#1 #0 #1 #1 #0 #0,)
      ,(#0 #1 #1 #0 #1 #0,)
      ,(#1 #1 #1 #0 #0 #1,)
_:
& suppose t !  #f-tuples
_% _;x .k (111110)~t _:1
_% _;y .k (111111)~t _:1 &
_% _;z .k (010111)~t _: h be5 rcvd4 ,!n
_%
,h_;x .k ,(#1,), ,h_;y .k ,(#1,), ,h_;z
.k ,(#1,)
         ,(#1,)           ,(#1,)
  ,(#0,)
         ,(#1,)           ,(#0,)
  ,(#0,)
_:
4 ,h;e1 _% _;x _: has an }ror 9 ! ?ird
bit & _% _;z _: has an }ror 9 ! f|r?
bit4 ,! transmitt$ code~ws = _% _;x _: &
_% _;z _: m/ h be5 _% (110110) _: &
_% (010011) _:1 respectively4 ,!
syndrome ( _% _;y _: does n o3ur 9 any (
! columns ( ! matrix .2;,h1 s       #cgh
multiple }rors m/ h o3urr$ to produce
_% _;y _:4
gggggggggggggggggggggggggggggggggggggggg

      ,subsec;n ,coset ,decod+
  ,we c use gr|p !ory to obta9 ano!r way
( decod+ messages4 ,a l9e> code .2;,c is
a subgr|p ( _% `;,z2~n _:4 ~1,coset  or
~1/&>d ~1decod+  uses ! cosets ( .2;,c 9
_% `;,z2~n _: to imple;t
maximum-likelihood decod+4 ,suppose t
.2;,c is an _% (n, m) _:-l9e> code4 ,a
coset ( .2;,c 9 _% `;,z2~n _: is writt5
9 ! =m _% _;x+,c _:1 ":
_% _;x `e `;,z2~n _:4 ,by ,lagrange's
,!orem "<,!orem #f4aj">1 "! >e
_% #2~n-m _: 4t9ct cosets ( .2;,c 9
_% `;,z2~n _:4
7777777777777777777777777777777777777777
,example  #h4ci 4
  ,let .2;,c 2 ! _% (5, 3) _:-l9e> code
giv5 by ! p>;y-*eck matrix


                                    #cgi
_%
,h .k ,(#0 #1 #1 #0 #0,)
      ,(#1 #0 #0 #1 #0,)
      ,(#1 #1 #0 #0 #1,)
_:
4 ,! code 3si/s ( ! code~ws
_% (00000)(01101)(10011)(11110) _:
4 ,"! >e _% #2~5-2 .k #2~3 _: cosets (
.2;,c 9 _% `;,z2~5 _:1 ea* ) ord}
_% #2~2 .k #4 _:4 ,~! cosets >e li/$ 9
,table #h4dj4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,table  #h4dj 4  ,cosets ( .2;,c
,coset2 ,coset4
,repres5tative2 4
.2;,c2
  _% (00000)(01101)(10011)(11110) _:4
_% (10000)+,c _:2
  _% (10000)(11101)(00011)(01110) _:4
_% (01000)+,c _:2
  _% (01000)(00101)(11011)(10110) _:4
_% (00100)+,c _:2
  _% (00100)(01001)(10111)(11010)-  #chj
   _:4
_% (00010)+,c _:2
  _% (00010)(01111)(10001)(11100) _:4
_% (00001)+,c _:2
  _% (00001)(01100)(10010)(11111) _:4
_% (10100)+,c _:2
  _% (00111)(01010)(10100)(11001) _:4
_% (00110)+,c _:2
  _% (00110)(01011)(10101)(11000) _:4
gggggggggggggggggggggggggggggggggggggggg

  ,|r task is to f9d | h{ "k+ ! cosets
mi<t help u to decode a message4
,suppose t _% _;x _: 0 ! orig9al code~w
s5t & t _% _;r _: is ! .2;n-tuple rcvd4
,if _% _;e _: is ! transmis.n }ror1 !n
_% _;r .k _;e+_;x _: or1 equival5tly1
_% _;x .k _;e+_;r _:4 ,h{"e1 ? is
exactly ! /ate;t t _% _;r _: is an ele;t
9 ! coset _% _;e+,c _:4 ,9
maximum-likelihood decod+ we expect !
}ror _% _;e _: to 2 z small z possible2
t is1 _% _;e _: w h ! l1/ wei<t4 ,an
.2;n-tuple ( l1/ wei<t 9 a coset is
call$ a ~1coset ~1l1d}~'4  ,once    #cha
we h det}m9$ a coset l1d} = ea* coset1 !
decod+ process 2comes a task ( calculat+
_% _;r+_;e _: to obta9 _% _;x _:4
7777777777777777777777777777777777777777
,example  #h4da 4
  ,9 ,table #h4dj1 notice t we h *os5 a
repres5tative ( ! l1/ possible wei<t =
ea* coset4 ,~! repres5tatives >e coset
l1d}s4 ,n{ suppose t
_% _;r .k (01111) _: is ! rcvd ~w4 ,to
decode _% _;r _:1 we f9d t x is 9 !
coset _% (00010)+,c _:2 h;e1 ! orig9ally
transmitt$ code~w m/ h be5
_% (01101) .k (01111)+(00010) _:4
gggggggggggggggggggggggggggggggggggggggg

  ,a pot5tial problem ) ? me?od ( decod+
is t we mi<t h to exam9e e coset = !
rcvd code~w4 ,! foll{+ proposi;n gives a
me?od ( imple;t+ coset decod+4 ,x /ates
t we c associate a syndrome ) ea* coset2
h;e1 we c make a table t designates a
coset l1d} correspond+ to ea* syndrome4
,s* a li/ is call$ a ~1decod+ ~1table~'4
                                    #chb
7777777777777777777777777777777777777777
,table  #h4db 4  ,syndromes = ea* coset
,syndrome2 ,coset ,l1d}4
_% (000) _:2 _% (00000) _:4
_% (001) _:2 _% (00001) _:4
_% (010) _:2 _% (00010) _:4
_% (011) _:2 _% (10000) _:4
_% (100) _:2 _% (00100) _:4
_% (101) _:2 _% (01000) _:4
_% (110) _:2 _% (00110) _:4
_% (111) _:2 _% (10100) _:4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,proposi;n  #h4dc 4
  ,let .2;,c 2 an _% (n, k) _:-l9e> code
giv5 by ! matrix .2;,h & suppose t
_% _;x _: & _% _;y _: >e 9
_% `;,z2~n _:4 ,!n _% _;x _: & _% _;y _:
>e 9 ! same coset ( .2;,c if & only if
_% ,h_;x .k ,h_;y _:4 ,t is1 two
.2;n-tuples >e 9 ! same coset if & only
if _! syndromes >e ! same4
gggggggggggggggggggggggggggggggggggggggg
                                    #chc
7777777777777777777777777777777777777777
,pro( 4
  ,two .2;n-tuples _% _;x _: & _% _;y _:
>e 9 ! same coset ( .2;,c exactly :5
_% _;x-_;y `e ,c _:2 h{"e1 ? is
equival5t to _% ,h(_;x-_;y) .k #0 _: or
_% ,h_;x .k ,h_;y _:4
gggggggggggggggggggggggggggggggggggggggg

7777777777777777777777777777777777777777
,example  #h4dd 4
  ,table #h4db is a decod+ table = !
code .2;,c giv5 9 ,example #h4ci4 ,if
_% _;x .k (01111) _: is rcvd1 !n xs
syndrome c 2 comput$ to 2
_%
,h_;x .k ,(#0,)
         ,(#1,)
         ,(#0,)
_:
4 ,exam9+ ! decod+ table1 we det}m9e t !
coset l1d} is _% (00010) _:4 ,x is n{
easy to decode ! rcvd code~w4
gggggggggggggggggggggggggggggggggggggggg
                                    #chd
  ,giv5 an _% (n, k) _:-block code1 ! "q
>ises ( :e!r or n coset decod+ is a
manag1ble s*eme4 ,a decod+ table
requires a li/ ( cosets & syndromes1 "o
= ea* ( ! _% #2~n-k _: cosets ( .2;,c4
,suppose t we h a _% (32, 24) _:-block
code4 ,we h a huge numb} ( code~ws1
_% #2~24 _:1 yet "! >e only
_% #2~32-24 .k #2~8 .k #256 _: cosets4
,sage4
  ,sage has a sub/antial rep}toire (
comm&s = cod+ !ory1 9clud+ ! abil;y to
build _m di6}5t families ( codes4
,r1d+ ,"qs #h4e ,r1d+ ,"qs #a 4
  ,suppose a b9>y code has m9imum 4t.e
_% d .k #6 _:4 ,h{ _m }rors c 2 detect$8
,h{ _m }rors c 2 correct$8
#b 4
  ,expla9 :y x is impossible = ! #h-bit
/r+ ) decimal value _% #56;10 _: to 2 an
,,ascii code = a "*4 ,assume ! leftmo/
bit ( ! /r+ is 2+ us$ z a p>;y-*eck bit4
#c 4
  ,suppose we rcv ! #h-bit /r+ ) decimal
value _% #56;10 _: :5 we >e         #che
expect+ ,,ascii "*s ) a p>;y-*eck bit 9
! f/ bit "<leftmo/">4 ,we "k an }ror has
o3urr$ 9 transmis.n4 ,give "o ( !
probable guesses = ! "* : 0 actually s5t
"<o!r ?an ,8#h,0">1 "u ! assump;n t any
9dividual bit is r>ely s5t 9 }ror4
,expla9 ! logic ( yr answ}4 "<,y may ne$
to 3sult a table ( ,,ascii values
onl9e4">
#d 4
  ,suppose a l9e> code .2;,c is cr1t$ z
! null space ( ! p>;y-*eck matrix
_%
,h .k `,(#0 #1 #0 #1 #0`,)
      `,(#1 #1 #1 #1 #0`,)
      `,(#0 #0 #1 #1 #1`,)
_:
,!n _% x .k #11100 _: is n a code~w4
,describe a computa;n1 & give ! result (
t computa;n1 : v}ifies t .2;x is n a
code~w ( ! code .2;,c4
#e 4
  ,= .2;,h & .2;x z 9 ! previ|s "q1
suppose t .2;x is rcvd z a message4
,give a maximum likelihood decod+   #chf
( ! rcvd message4
,ex}cises #h4f ,ex}cises #a 4
  ,:y is ! foll{+ 5cod+ s*eme n
a3eptable8
,9=ma;n2 #j2 #a2 #b2 #c2 #d2 #e2 #f2 #g2
  #h4
,code~w2 #jjj2 #jja2 #jaj2 #jaa2 #aja2
  #aaj2 #aaa2 #jjj2 #jja4
#b 4
  ,)|t do+ any addi;n1 expla9 :y !
foll{+ set ( #d-tuples 9 _% `;,z2~4 _:
_c 2 a gr|p code4
_% (0110)(1001)(1010)(1100) _:
#c 4
  ,compute ! ,hamm+ 4t.es 2t ! foll{+
pairs ( .2;n-tuples4

a4 _% (011010), (011100) _:
;b4 _% (11110101), (01010100) _:
;c4 _% (00110), (01111) _:
;d4 _% (1001), (0111) _:

#d 4
  ,compute ! wei<ts ( ! foll{+
.2;n-tuples4                        #chg
a4 _% (011010) _:
;b4 _% (11110101) _:
;c4 _% (01111) _:
;d4 _% (1011) _:

#e 4
  ,suppose t a l9e> code .2;,c has a
m9imum wei<t ( #g4 ,:at >e !
}ror-detec;n & }ror-correc;n
capabilities ( .2;,c8
#f 4
  ,9 ea* ( ! foll{+ codes1 :at is !
m9imum 4t.e = ! code8 ,:at is ! be/
situa;n we mi<t hope = 9 3nec;n ) }ror
detec;n & }ror correc;n8

a4 _%
  (011010)(011100)(110111)(110000)
  _:
;b4
  _% (011100)(011011)(111011)(100011)(0-
  00000)(010101)(110100)(110011) _:
;c4 _%
  (000000)(011100)(110101)(110001)
  _:                                #chh
;d4
  _% (0110110)(0111100)(1110000)(111111-
  1)(1001001)(1000011)(0001111)(0000000-
  ) _:

#g 4
  ,compute ! null space ( ea* ( ! foll{+
matrices4 ,:at type ( _% (n, k) _:-block
codes >e ! null spaces8 ,c y f9d a
matrix "<n necess>ily a /&>d g5}ator
matrix"> t g5}ates ea* code8 ,>e yr
g5}ator matrices unique8

a4
  _%
  ,(#0 #1 #0 #0 #0,)
  ,(#1 #0 #1 #0 #1,)
  ,(#1 #0 #0 #1 #0,)
  _:
  ;b4




                                    #chi
  _%
  ,(#1 #0 #1 #0 #0 #0,)
  ,(#1 #1 #0 #1 #0 #0,)
  ,(#0 #1 #0 #0 #1 #0,)
  ,(#1 #1 #0 #0 #0 #1,)
  _:
;c4
  _%
  ,(#1 #0 #0 #1 #1,)
  ,(#0 #1 #0 #1 #1,)
  _:
;d4
  _%
  ,(#0 #0 #0 #1 #1 #1 #1,)
  ,(#0 #1 #1 #0 #0 #1 #1,)
  ,(#1 #0 #1 #0 #1 #0 #1,)
  ,(#0 #1 #1 #0 #0 #1 #1,)
  _:

#h 4
  ,3/ruct a _% (5, 2) _:-block code4
,4cuss bo? ! }ror-detec;n &
}ror-correc;n capabilities ( yr code4
#i 4
  ,let .2;,c 2 ! code obta9$ f !    #cij
null space ( ! matrix
_%
,h .k ,(#0 #1 #0 #0 #1,)
      ,(#1 #0 #1 #0 #1,)
      ,(#0 #0 #1 #1 #1,)
_:
4 ,decode ! message
_% #01111#10101#01110#00011 _:
if possible4
#aj 4
  ,suppose t a #ajjj-bit b9>y message is
transmitt$4 ,assume t ! probabil;y ( a
s+le }ror is .2;p & t ! }rors o3urr+ 9
di6}5t bits >e 9dep5d5t ( "o ano!r4 ,if
_% p .k #0.01 _:1 :at is ! probabil;y (
m ?an "o }ror o3urr+8 ,:at is !
probabil;y ( exactly two }rors o3urr+8
,rep1t ? problem = _% p .k #0.0001 _:4
#aa 4
  ,: matrices >e canonical p>;y-*eck
matrices8 ,= ~? matrices t >e canonical
p>;y-*eck matrices1 :at >e ! correspond+
/&>d g5}ator matrices8 ,:at >e !
}ror-detec;n & }ror-correc;n
capabilities ( ! code g5}at$ by     #cia
ea* ( ~! matrices8

a4
  _%
  ,(#1 #1 #0 #0 #0,)
  ,(#0 #0 #1 #0 #0,)
  ,(#0 #0 #0 #1 #0,)
  ,(#1 #0 #0 #0 #1,)
  _:
;b4
  _%
  ,(#0 #1 #1 #0 #0 #0,)
  ,(#1 #1 #0 #1 #0 #0,)
  ,(#0 #1 #0 #0 #1 #0,)
  ,(#1 #1 #0 #0 #0 #1,)
  _:
;c4
  _%
  ,(#1 #1 #1 #0,)
  ,(#1 #0 #0 #1,)
  _:
  ;d4


                                    #cib
  _%
  ,(#0 #0 #0 #1 #0 #0 #0,)
  ,(#0 #1 #1 #0 #1 #0 #0,)
  ,(#1 #0 #1 #0 #0 #1 #0,)
  ,(#0 #1 #1 #0 #0 #0 #1,)
  _:

#ab 4
  ,li/ all possible syndromes = ! codes
g5}at$ by ea* ( ! matrices 9
,ex}cise #h4f4aa4
#ac 4
  ,let
_%
,h .k ,(#0 #1 #1 #1 #1,)
      ,(#0 #0 #0 #1 #1,)
      ,(#1 #0 #1 #0 #1,)
_:
4 ,compute ! syndrome caus$ by ea* ( !
foll{+ transmis.n }rors4

a4 ,an }ror 9 ! f/ bit4
;b4 ,an }ror 9 ! ?ird bit4
;c4 ,an }ror 9 ! la/ bit4
;d4 ,}rors 9 ! ?ird & f|r? bits4    #cic
#ad 4
  ,let .2;,c 2 ! gr|p code 9
_% `;,z2~3 _: def9$ by ! code~ws
_% (000) _: & _% (111) _:4 ,compute !
cosets ( .2;,c 9 _% `;,z2~3 _:4 ,:y 0 "!
no ne$ to specify "r or left cosets8
,give ! s+le transmis.n }ror1 if any1 to
: ea* coset corresponds4
#ae 4
  ,= ea* ( ! foll{+ matrices1 f9d !
cosets ( ! correspond+ code .2;,c4 ,give
a decod+ table = ea* code if possible4

a4
  _%
  ,(#0 #1 #0 #0 #0,)
  ,(#1 #0 #1 #0 #1,)
  ,(#1 #0 #0 #1 #0,)
  _:
  ;b4




                                    #cid
  _%
  ,(#0 #0 #1 #0 #0,)
  ,(#1 #1 #0 #1 #0,)
  ,(#0 #1 #0 #1 #0,)
  ,(#1 #1 #0 #0 #1,)
  _:
;c4
  _%
  ,(#1 #0 #0 #1 #1,)
  ,(#0 #1 #0 #1 #1,)
  _:
;d4
  _%
  ,(#1 #0 #0 #1 #1 #1 #1,)
  ,(#1 #1 #1 #0 #0 #1 #1,)
  ,(#1 #0 #1 #0 #1 #0 #1,)
  ,(#1 #1 #1 #0 #0 #1 #0,)
  _:

#af 4
  ,let _% _;x _:1 _% _;y _:1 & _% _;z _:
2 b9>y .2;n-tuples4 ,prove ea* ( !
foll{+ /ate;ts4

a4 _% w(_;x) .k d(_;x, _#0) _:      #cie
;b4 _%
  d(_;x, _;y) .k d(_;x+_;z, _;y+_;z)
  _:
;c4 _% d(_;x, _;y) .k w(_;x-_;y) _:

#ag 4
  ,a ~1metric on a set .2;,x is a map
_% d_3 ,x`*,x $o `;,r _: satisfy+ !
foll{+ 3di;ns4

a4 _% d(_;x, _;y) .1: #0 _: = all
  _% _;x, _;y `e ,x _:2
;b4 _% d(_;x, _;y) .k #0 _: exactly :5
  _% _;x .k _;y _:2
;c4 _% d(_;x, _;y) .k d(_;y, _;x) _:2
;d4
  _% d(_;x, _;y) "k: d(_;x, _;z)+d(_;z,
  _;y) _:
  4

,9 o!r ~ws1 a metric is simply a
g5}aliza;n ( ! no;n ( 4t.e4 ,prove t
,hamm+ 4t.e is a metric on
_% `;,z2~n _:4 ,decod+ a message
actually r$uces to decid+ : is !    #cif
close/ code~w 9 t}ms ( 4t.e4
#ah 4
  ,let .2;,c 2 a l9e> code4 ,%{ t ei !
.2i? coord9ates 9 ! code~ws ( .2;,c >e
all z}os or exactly half ( !m >e z}os4
#ai 4
  ,let .2;,c 2 a l9e> code4 ,%{ t ei e
code~w has ev5 wei<t or exactly half ( !
code~ws h ev5 wei<t4
#bj 4
  ,%{ t ! code~ws ( ev5 wei<t 9 a l9e>
code .2;,c >e al a l9e> code4
#ba 4
  ,if we >e to use an }ror-correct+ l9e>
code to transmit ! #abh ,,ascii "*s1 :at
size matrix m/ 2 us$8 ,:at size matrix
m/ 2 us$ to transmit ! ext5d$ ,,ascii "*
set ( #bef "*s8 ,:at if we require only
}ror detec;n 9 bo? cases8
#bb 4
  ,f9d ! canonical p>;y-*eck matrix t
gives ! ev5 p>;y *eck bit code ) ?ree
9=ma;n posi;ns4 ,:at is ! matrix = sev5
9=ma;n posi;ns8 ,:at >e ! correspond+
/&>d g5}ator matrices8              #cig
#bc 4
  ,h{ _m *eck posi;ns >e ne$$ = a s+le
}ror-correct+ code ) #bj 9=ma;n posi;ns8
,) #cb 9=ma;n posi;ns8
#bd 4
  ,let _% _;e;i _: 2 ! b9>y .2;n-tuple )
a #a 9 ! .2i? coord9ate & #j's else": &
suppose t _% ,h `e `;,m;m`*n"(`;,z2) _:4
,%{ t _% ,h_;e;i _: is ! .2i? column ( !
matrix .2;,h4
#be 4
  ,let .2;,c 2 an _% (n, k) _:-l9e>
code4 ,def9e ! ~1dual or ~1or?ogonal
~1code ( .2;,c  to 2
_% ,c~$p .k .(_;x `e `;,z2~n_3_;x*_;y .k
#0 for all _;y `e ,c.) _:
4

a4 ,f9d ! dual code ( ! l9e> code .2;,c
  ": .2;,c is giv5 by ! matrix
  _%
  ,(#1 #1 #1 #0 #0,)
  ,(#0 #0 #1 #0 #1,)
  ,(#1 #0 #0 #1 #0,)
  _:                                #cih
  4
;b4 ,%{ t _% ,c~$p _: is an
  _% (n, n-k) _:-l9e> code4
;c4 ,f9d ! /&>d g5}ator & p>;y-*eck
  matrices ( .2;,c & _% ,c~$p _:4 ,:at
  happ5s 9 g5}al8 ,prove yr 3jecture4

#bf 4
  ,let .2;,h 2 an _% m`*n _: matrix ov}
_% `;,z2 _:1 ": ! .2i? column is ! numb}
.2i writt5 9 b9>y ) .2;m bits4 ,! null
space ( s* a matrix is call$ a ~1,hamm+
~1code~'4

a4 ,%{  t ! matrix
  _%
  ,h .k ,(#0 #0 #0 #1 #1 #1,)
        ,(#0 #1 #1 #0 #0 #1,)
        ,(#1 #0 #1 #0 #1 #0,)
  _:
  g5}ates a ,hamm+ code4 ,:at >e !
  }ror-correct+ prop}ties ( a ,hamm+
  code8
;b4 ,! column correspond+ to ! syndrome
  al m>ks ! bit t 0 9 }ror2 t is1   #cii
  ! .2i? column ( ! matrix is .2i writt5
  z a b9>y numb}1 & ! syndrome immly
  tells u : bit is 9 }ror4 ,if ! rcvd ~w
  is _% (101011) _:1 compute ! syndrome4
  ,9 : bit did ! }ror o3ur 9 ? case1 &
  :at code~w 0 orig9ally transmitt$8
;c4 ,give a b9>y matrix .2;,h = ! ,hamm+
  code ) six 9=ma;n posi;ns & f|r *eck
  posi;ns4 ,:at >e ! *eck posi;ns & :at
  >e ! 9=ma;n posi;ns8 ,5code ! messages
  _% (101101) _: & _% (001001) _:4
  ,decode ! rcvd ~ws _% (0010000101) _:
  & _% (0000101100) _:4 ,:at >e !
  possible syndromes = ? code8
;d4 ,:at is ! numb} ( *eck bits & !
  numb} ( 9=ma;n bits 9 an
  _% (m, n) _:-block ,hamm+ code8 ,give
  bo? an upp} & a l{} b.d on ! numb} (
  9=ma;n bits 9 t}ms ( ! numb} ( *eck
  bits4 ,hamm+ codes hav+ ! maximum
  possible numb} ( 9=ma;n bits ) .2;k
  *eck bits >e call$ ~1p}fect~'4 ,e
  possible syndrome except _% _#0 _:
  o3urs z a column4 ,if ! numb} ( 9=ma;n
  bits is less ?an ! maximum1 !n !  #djj
  code is call$ ~1%ort5$~'4 ,9 ? case1
  give an example %{+ t "s syndromes c
  repres5t multiple }rors4

,ex}cises #h4g ,programm+ ,ex}cises #a 4
  ,write a program to imple;t a
_% (16, 12) _:-l9e> code4 ,yr program %d
2 able to 5code & decode messages us+
coset decod+4 ,once yr program is
writt51 write a program to simulate a
b9>y symmetric *annel ) transmis.n
noise4 ,comp>e ! results ( yr simula;n )
! !oretically pr$ict$ }ror probabil;y4
,ref};es #h4h ,ref};es & ,su7e/$ ,r1d+s
.<#a.>    ,blake1 ,i4 ;,f4 8,codes &
,designs10 ,ma!matics ,magaz9e ~1#eb
"<#aigi">1 #ha,-#ie4 .<#b.>    ,hill1
;,r4 ,a ,f/ ,c|rse 9 ,cod+ ,!ory4 ,ox=d
,univ}s;y ,press1 ,ox=d1 #aiij4 .<#c.>
 ,lev9son1 ;,n4 8,cod+ ,!ory3 ,a
,c.t}example to ;,g4 ;,h4 ,h>dy's
,3cep;n ( ,appli$ ,ma!matics10 ,am}ican
,ma!matical ,mon?ly ~1#gg "<#aigj">1
#bdi,-#eh4 .<#d.>    ,lidl1 ;,r4 &
,pilz1 ;,g4 ,appli$ ,ab/ract        #dja
,algebra4 #bnd $4 ,spr+}1 ,new ,york1
#aiih4 .<#e.>    ,mac,williams1 ;,f4
;,j4 & ,sloane1 ;,,,n4 ;j4 a4,' ,! ,!ory
( ,}ror-,correct+ ,codes4 ,nor?-,holl&
,ma!matical ,libr>y1 #af1 ,elsevi}1
,am/}dam1 #aihc4 .<#f.>    ,roman1 ;,s4
,cod+ & ,9=ma;n ,!ory4 ,spr+}-,v}lag1
,new ,york1 #aiib4 .<#g.>    ,%annon1
;,,,c4 ;e4 8a,' ,ma!matical ,!ory (
,communica;n10 ,bell ,sy/em ,te*nical
,j|rnal ~1#bg "<#aidh">1 #cgi,-#dbc1
#fbc,-#ef4 .<#h.>    ,?ompson1 ;,t4 ;,m4
,f ,}ror-,correct+ ,codes "? ,sp"h
,pack+ to ,simple ,gr|ps4 ,c>us
,monograph ,s}ies1 ,no4 #ba4 ,ma!matical
,associa;n ( ,am}ica1 ,wa%+ton1 ,,dc1
#aihc4 .<#i.>    van ,l9t1 ;,j4 ;,h4
,9troduc;n to ,cod+ ,!ory4 ,spr+}1 ,new
,york1 #aiii4





                                    #djb
